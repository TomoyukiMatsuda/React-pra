{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matsudatomoyuki/programming/js_practice/React-pra/react-testing-sandbox-main/src/components/AsyncCounter/AsyncCounter.tsx\";\nimport { useState } from \"react\";\nexport function AsyncCounter({\n  delay = 1000\n}) {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n\n  const handler = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setCount(count + 1);\n      setLoading(false);\n    }, delay);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"AsyncCount: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handler,\n        disabled: isLoading,\n        children: \"AsyncIncrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/matsudatomoyuki/programming/js_practice/React-pra/react-testing-sandbox-main/src/components/AsyncCounter/AsyncCounter.tsx"],"names":["useState","AsyncCounter","delay","count","setCount","isLoading","setLoading","handler","setTimeout"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAtB,EAA4D;AACjE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA0BN,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMO,OAAO,GAAG,MAAM;AACpBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHS,EAGPJ,KAHO,CAAV;AAID,GAND;;AAOA,sBACE;AAAA,4BACE;AAAA,iCAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACGE,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADhB,eAEE;AAAQ,QAAA,OAAO,EAAEE,OAAjB;AAA0B,QAAA,QAAQ,EAAEF,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAWD","sourcesContent":["import { useState } from \"react\"\n\nexport function AsyncCounter({ delay = 1000 }: { delay?: number }) {\n  const [count, setCount] = useState(0)\n  const [isLoading, setLoading] = useState(false)\n  const handler = () => {\n    setLoading(true)\n    setTimeout(() => {\n      setCount(count + 1)\n      setLoading(false)\n    }, delay)\n  }\n  return (\n    <>\n      <div>AsyncCount: {count}</div>\n      <div>\n        {isLoading && <span>...Loading</span>}\n        <button onClick={handler} disabled={isLoading}>\n          AsyncIncrement\n        </button>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}