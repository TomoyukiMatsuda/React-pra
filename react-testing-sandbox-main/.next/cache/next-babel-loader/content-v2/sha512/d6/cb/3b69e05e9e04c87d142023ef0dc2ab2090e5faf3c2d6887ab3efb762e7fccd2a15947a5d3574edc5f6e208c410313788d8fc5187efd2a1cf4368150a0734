{"ast":null,"code":"var _window;\n\nvar tracker = \"\";\n\nvar fallbackFn = function fallbackFn(command) {\n  var _console;\n\n  for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    fields[_key - 1] = arguments[_key];\n  }\n\n  (_console = console).log.apply(_console, [\"window.ga(\", command].concat(fields, [\")\"]));\n};\n\nvar ga = true ? ((_window = window) === null || _window === void 0 ? void 0 : _window.ga) || fallbackFn : fallbackFn;\nexport function setStatus(status) {\n  ga(\"\".concat(tracker, \"set\"), status);\n}\nexport function sendEvent(action, category, fields) {\n  ga(\"\".concat(tracker, \"event\"), action, category, fields);\n}\nexport function sendPageview() {\n  ga(\"send\", \"pageview\");\n}","map":{"version":3,"sources":["/Users/matsudatomoyuki/programming/js_practice/React-pra/react-testing-sandbox-main/src/libs/analytics.ts"],"names":["tracker","fallbackFn","command","fields","console","log","ga","window","setStatus","status","sendEvent","action","category","sendPageview"],"mappings":";;AAAA,IAAMA,OAAO,GAAG,EAAhB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAA2C;AAAA;;AAAA,oCAAtBC,MAAsB;AAAtBA,IAAAA,MAAsB;AAAA;;AAC5D,cAAAC,OAAO,EAACC,GAAR,gCAA0BH,OAA1B,SAAsCC,MAAtC;AACD,CAFD;;AAGA,IAAMG,EAAE,GAAG,OAAgC,YAAAC,MAAM,UAAN,0CAAQD,EAAR,KAAcL,UAA9C,GAA2DA,UAAtE;AAEA,OAAO,SAASO,SAAT,CAAmBC,MAAnB,EAAoD;AACzDH,EAAAA,EAAE,WAAIN,OAAJ,UAAkBS,MAAlB,CAAF;AACD;AAED,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAAmCC,QAAnC,EAAqDT,MAArD,EAAgG;AACrGG,EAAAA,EAAE,WAAIN,OAAJ,YAAoBW,MAApB,EAA4BC,QAA5B,EAAsCT,MAAtC,CAAF;AACD;AAED,OAAO,SAASU,YAAT,GAAwB;AAC7BP,EAAAA,EAAE,CAAC,MAAD,EAAS,UAAT,CAAF;AACD","sourcesContent":["const tracker = \"\"\nconst fallbackFn = (command: string, ...fields: unknown[]) => {\n  console.log(`window.ga(`, command, ...fields, `)`)\n}\nconst ga = typeof window !== \"undefined\" ? window?.ga || fallbackFn : fallbackFn\n\nexport function setStatus(status: Record<string, unknown>) {\n  ga(`${tracker}set`, status)\n}\n\nexport function sendEvent(action: string, category: string, fields?: string | Record<string, unknown>) {\n  ga(`${tracker}event`, action, category, fields)\n}\n\nexport function sendPageview() {\n  ga(\"send\", \"pageview\")\n}\n"]},"metadata":{},"sourceType":"module"}