{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/matsudatomoyuki/programming/js_practice/React-pra/react-testing-sandbox-main/src/components/AsyncCounter/AsyncCounter.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport function AsyncCounter(_ref) {\n  _s();\n\n  var _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 1000 : _ref$delay;\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var handler = function handler() {\n    setLoading(true);\n    setTimeout(function () {\n      setCount(count + 1);\n      setLoading(false);\n    }, delay);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"AsyncCount: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handler,\n        disabled: isLoading,\n        children: \"AsyncIncrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AsyncCounter, \"keDKO+BXLSjyyqFZTAevuADYBQ4=\");\n\n_c = AsyncCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsyncCounter\");","map":{"version":3,"sources":["/Users/matsudatomoyuki/programming/js_practice/React-pra/react-testing-sandbox-main/src/components/AsyncCounter/AsyncCounter.tsx"],"names":["useState","AsyncCounter","delay","count","setCount","isLoading","setLoading","handler","setTimeout"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,SAASC,YAAT,OAA4D;AAAA;;AAAA,wBAApCC,KAAoC;AAAA,MAApCA,KAAoC,2BAA5B,IAA4B;;AAAA,kBACvCF,QAAQ,CAAC,CAAD,CAD+B;AAAA,MAC1DG,KAD0D;AAAA,MACnDC,QADmD;;AAAA,mBAEjCJ,QAAQ,CAAC,KAAD,CAFyB;AAAA,MAE1DK,SAF0D;AAAA,MAE/CC,UAF+C;;AAGjE,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,YAAM;AACfJ,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHS,EAGPJ,KAHO,CAAV;AAID,GAND;;AAOA,sBACE;AAAA,4BACE;AAAA,iCAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACGE,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADhB,eAEE;AAAQ,QAAA,OAAO,EAAEE,OAAjB;AAA0B,QAAA,QAAQ,EAAEF,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAWD;;GArBeJ,Y;;KAAAA,Y","sourcesContent":["import { useState } from \"react\"\n\nexport function AsyncCounter({ delay = 1000 }: { delay?: number }) {\n  const [count, setCount] = useState(0)\n  const [isLoading, setLoading] = useState(false)\n  const handler = () => {\n    setLoading(true)\n    setTimeout(() => {\n      setCount(count + 1)\n      setLoading(false)\n    }, delay)\n  }\n  return (\n    <>\n      <div>AsyncCount: {count}</div>\n      <div>\n        {isLoading && <span>...Loading</span>}\n        <button onClick={handler} disabled={isLoading}>\n          AsyncIncrement\n        </button>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}